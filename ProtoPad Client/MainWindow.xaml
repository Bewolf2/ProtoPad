<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:syntaxeditor="http://schemas.actiprosoftware.com/winfx/xaml/syntaxeditor"
        x:Class="ProtoPad_Client.MainWindow" Title="ProtoPad - NOT connected!" Height="800" Width="1024" Loaded="Window_Loaded"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        x:Name="ProtoPadWindow">

    <Grid>
       
        <Grid.RowDefinitions>
            <RowDefinition Height="36" />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <ToolBar Grid.Row="0" VerticalAlignment="Top" Height="36" HorizontalAlignment="Stretch">

                <Button x:Name="ConnectButton" Content="Connect" Height="31" VerticalAlignment="Top" Width="67" ToolTip="Connect to a mobile app" Click="ConnectButton_Click"/>
                
                <Button x:Name="SendCodeButton" Content="Run" Height="31" VerticalAlignment="Top" Width="61" Click="SendCodeButton_Click" ToolTip="Send code in editor window to connected app (F5)"/>
                <Button x:Name="SendCssButton" Content="Update CSS" Height="31" VerticalAlignment="Top" Width="87" ToolTip="Send and update Pixate CSS, and restyle the app using the new CSS" Click="SendCssButton_Click"/>
                
                <Button x:Name="LoadAssemblyButton" Content="Add reference" Height="31" VerticalAlignment="Top" Width="100" Click="LoadAssemblyButton_Click" ToolTip="Select and send a  (compatible) .Net assembly to the running app. You will be able to reference and use that assembly from your code."/>
                <Button x:Name="ClearSimulatorWindowButton" Content="Clear app window" Height="31" VerticalAlignment="Top" Width="121" Click="ClearSimulatorWindowButton_Click" ToolTip="Quickly remove all components from your app's main view" IsEnabled="False"/>
                <ComboBox x:Name="CodeTypeComboBox" DisplayMemberPath="DisplayName" VerticalAlignment="Top" Width="104" Height="31" SelectionChanged="CodeTypeComboBox_SelectionChanged" Margin="0" ToolTip="Select what mode to code in: use 'Expression' for quick oneline commands and inspections (no need to use Dump()), use 'Statements' for multi-line code, use 'Program' in order to be able to use functions and classes.">
                </ComboBox>

                <Button x:Name="AboutHelpButton" Content="About/help" Height="31" VerticalAlignment="Top" Width="83" Click="AboutHelpButton_Click" ToolTip="Instructions and information about the app author and leveraged components."/>

        </ToolBar>
        
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0" >
                <!--<syntaxeditor:SyntaxEditor DockPanel.Dock="Bottom" x:Name="CodeEditor" IsIndicatorMarginVisible="True">-->
                <syntaxeditor:SyntaxEditor DockPanel.Dock="Left" x:Name="CodeEditor">
                    <syntaxeditor:EditorDocument xml:space="preserve"></syntaxeditor:EditorDocument>
                </syntaxeditor:SyntaxEditor>
            </DockPanel>
            <GridSplitter Width ="5" VerticalAlignment="Stretch" HorizontalAlignment="Right"></GridSplitter>
            <DockPanel Grid.Column="1">
                <TabControl  x:Name="SidebarTabControl" >
                    <TabItem Header ="Projects" x:Name="ProjectsTabItem">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height ="40"/>
                            </Grid.RowDefinitions>
                            <Grid.Resources>
                                <Style x:Key="itemStyle" TargetType ="{x:Type ListViewItem}">
                                    <EventSetter Event = "MouseDoubleClick" Handler="ProjectListView_DoubleClick"></EventSetter>
                                </Style>
                            </Grid.Resources>

                            <ListView x:Name="ProjectListView" Grid.Row="0" ItemsSource="{Binding ProjectsCollection}" SelectionChanged="ProjectListView_SelectionChanged" SelectionMode="Single" ItemContainerStyle="{StaticResource itemStyle}">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Width="200" Header="Project Name" DisplayMemberBinding="{Binding ProjectName}"  />
                                        <GridViewColumn Header="Path" DisplayMemberBinding="{Binding ProjectPath}" />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="AddProjectButton" Grid.Column ="0" Content="Add Project Folder" Click="AddProjectButton_Click" />
                                <Button x:Name="RemoveProjectButton" Grid.Column ="1" Content="Remove Project" Click="RemoveProjectButton_Click" />
                                <Button x:Name="SwitchProjectButton" Grid.Column ="2" Content="Switch to selected Project" Click="SwitchProjectButton_Click" />
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Extra Source Files" x:Name="ExtraSourceTabItem">
                        <Grid>
                            <Grid.RowDefinitions><RowDefinition Height="*"/><RowDefinition Height ="40"/></Grid.RowDefinitions>
                            <Grid.Resources>
                                <Style x:Key="itemStyle" TargetType ="{x:Type ListViewItem}">
                                    <EventSetter Event = "MouseDoubleClick" Handler="ExtraSourceListView_DoubleClick"></EventSetter>
                                </Style>
                            </Grid.Resources>
                            <ListView x:Name="ExtraSourceListView" Grid.Row="0" ItemsSource="{Binding ExtraSourceFilesCollection}" ItemContainerStyle="{StaticResource itemStyle}">
                                
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Width="200" Header="File Name" DisplayMemberBinding="{Binding FileName}"  />
                                        <GridViewColumn Header="Path" DisplayMemberBinding="{Binding FilePath}" />
                                    </GridView>
                                </ListView.View>
                                
                            </ListView>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="ExtraSourceFilesButton" Grid.Column ="0" Content="Extra Sources Files..." Click="ExtraSourceFilesButton_Click" />
                                <Button x:Name="ExtraSourceFolderButton" Grid.Column ="1" Content="Extra Sources Folder..." Click="ExtraSourceFolderButton_Click" />
                                <Button x:Name="RemoveSourceButton" Grid.Column ="2" Content="Remove" Click="RemoveSourceButton_Click" />
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Using..." Name="tabItem1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBox Grid.Row="0" x:Name="DefaultUsingTextBox" Text="{Binding Path=DefaultUsingStatements, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" AcceptsReturn="True" IsReadOnly="true" VerticalScrollBarVisibility="Auto" Background="#FFE8E8E8" FontFamily="Consolas" />
                            <GridSplitter HorizontalAlignment="Stretch" Height="2" VerticalAlignment="Bottom"/>
                            <TextBox Grid.Row="1" x:Name="ExtraUsingTextBox" Text="{Binding Path=ExtraUsingStatements, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" AcceptsReturn="True" IsReadOnly="False" VerticalScrollBarVisibility="Auto"  FontFamily="Consolas" />
                        </Grid>

                    </TabItem>
                </TabControl>
            </DockPanel>
        </Grid>        
        
                
        
        <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" ResizeDirection="Rows" Height ="5"  VerticalAlignment="Bottom"/>
        
        <DockPanel Grid.Row="2" >
            <WebBrowser x:Name="ResultTextBox" />
        </DockPanel>
        
        <StatusBar Grid.Row="3" Height="30" VerticalAlignment="Bottom" >
            <Label x:Name="StatusLabel"></Label>
        </StatusBar>
    </Grid>
</Window>
